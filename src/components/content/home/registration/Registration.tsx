import React from 'react';import 'antd/dist/antd.css';import {    Form,    Input,    Select,    Button,    message,} from 'antd';import {useMutation} from "@apollo/client";import {SIGN_UP} from "../../../../api/mutations";import {useDispatch} from "react-redux";import {setLoggedAC} from "../../../../store/authReducer";const {Option} = Select;const formItemLayout = {    labelCol: {        xs: {            span: 24,        },        sm: {            span: 8,        },    },    wrapperCol: {        xs: {            span: 24,        },        sm: {            span: 16,        },    },};const tailFormItemLayout = {    wrapperCol: {        xs: {            span: 24,            offset: 0,        },        sm: {            span: 16,            offset: 8,        },    },};const Registration = () => {    const [form] = Form.useForm();    const dispatch = useDispatch();    const [registration] = useMutation(SIGN_UP);    const error = (errorMessage:string) => {        message.error(errorMessage);    };    const success = () => {        message.success('Вітаємо! Реєстрація пройшла успішно!');    };    const onFinish = (values: any) => {        registration({            variables: {                "input": {                    "email": values.email,                    "phoneNumber": values.prefix + values.phone,                    "extraPhoneNumbers": "0",                    "password": values.password,                    "firstName": values.firstName,                    "patronymic": values.patronymic,                    "lastName": values.lastName,                    "type": values.status[0],                    "department": values.department                }            }        }).then(r => {                dispatch(setLoggedAC(true));                success();        }, r => {            console.log(r)            console.log(values)        })    };    const prefixSelector = (        <Form.Item name="prefix" noStyle>            <Select                style={{                    width: 90,                }}            >                <Option value="+380">+380</Option>            </Select>        </Form.Item>    );    return <>        <Form            {...formItemLayout}            form={form}            name="register"            onFinish={onFinish}            initialValues={{                status: ['STUDENT'],                prefix: '+380',            }}            scrollToFirstError        >            <Form.Item                name="email"                label="E-mail"                rules={[                    {                        type: 'email',                        message: 'E-mail задано невірно!',                    },                    {                        required: true,                        message: 'Будь ласка, введіть e-mail!',                    },                ]}            >                <Input/>            </Form.Item>            <Form.Item                name="password"                label="Пароль"                rules={[                    {                        required: true,                        message: 'Будь ласка, введіть пароль!',                    },                ]}                hasFeedback            >                <Input.Password/>            </Form.Item>            <Form.Item                name="confirm"                label="Повтор паролю"                dependencies={['password']}                hasFeedback                rules={[                    {                        required: true,                        message: 'Будь ласка, введіть пароль!',                    },                    ({getFieldValue}) => ({                        validator(rule, value) {                            if (!value || getFieldValue('password') === value) {                                return Promise.resolve();                            }                            return Promise.reject('Паролі не співпадають!');                        },                    }),                ]}            >                <Input.Password/>            </Form.Item>            <Form.Item                name="firstName"                label="Ім'я"                rules={[                    {                        required: true,                        message: "Введіть ім'я",                        whitespace: true,                    },                ]}            >                <Input/>            </Form.Item>            <Form.Item                name="patronymic"                label="По-батькові"                rules={[                    {                        required: false,                        message: "Введіть по-батькові",                        whitespace: true,                    },                ]}            >                <Input/>            </Form.Item>            <Form.Item                name="lastName"                label="Прізвище"                rules={[                    {                        required: true,                        message: "Введіть прізвище",                        whitespace: true,                    },                ]}            >                <Input/>            </Form.Item>            <Form.Item                name="status"                label="Статус"                rules={[                    {                        type: 'array',                        required: true,                        message: 'Виберіть статус',                    },                ]}            >                <Select                    defaultValue="STUDENT"                    showSearch                    style={{width: "100%"}}                    placeholder="Виберіть статус"                    optionFilterProp="children"                    onChange={() => {                    }}                    onFocus={() => {                    }}                    onBlur={() => {                    }}                    onSearch={() => {                    }}                    filterOption={(input, option) =>                        //@ts-ignore                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0                    }                >                    <Option value="STUDENT">Студент</Option>                    <Option value="TEACHER">Педагог</Option>                    <Option value="POST_GRADUATE">Асистент/аспірант</Option>                    <Option value="CONCERTMASTER">Концертмейстер</Option>                    <Option value="ILLUSTRATOR">Іллюстратор</Option>                </Select>            </Form.Item>            <Form.Item                name="phone"                label="Телефон"                rules={[                    {                        required: true,                        message: 'Введіть номер телефону!',                    },                ]}            >                <Input                    addonBefore={prefixSelector}                    style={{                        width: '100%',                    }}                />            </Form.Item>            <Form.Item                name="department"                label="Кафедра"                rules={[                    {                        required: true,                        message: 'Введіть кафедру!',                    },                ]}            >                <Input />            </Form.Item>            <Form.Item {...tailFormItemLayout}>                <Button type="primary" htmlType="submit">                    Реєстрація                </Button>            </Form.Item>        </Form>    </>}export default Registration;